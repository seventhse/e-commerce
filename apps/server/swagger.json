{
  "openapi": "3.0.0",
  "info": {
    "title": "E-Commerce API - Commodity Management",
    "description": "API documentation for commodity management in the e-commerce system",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "Default server"
    }
  ],
  "paths": {
    "/commodity/list": {
      "get": {
        "tags": ["Commodity Management"],
        "summary": "Get all commodities",
        "description": "Retrieves all commodities based on the provided filters",
        "operationId": "findAllCommodities",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by commodity name (case insensitive, partial match)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Filter by commodity description (case insensitive, partial match)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter by minimum price",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter by maximum price",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Filter by category ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter by active status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of commodities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommodityResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commodity/page": {
      "get": {
        "tags": ["Commodity Management"],
        "summary": "Get paginated commodities",
        "description": "Retrieves paginated commodities with filters",
        "operationId": "findPageCommodities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (starting from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by commodity name (case insensitive, partial match)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Filter by commodity description (case insensitive, partial match)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter by minimum price",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter by maximum price",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Filter by category ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter by active status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of commodities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedCommodityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commodity/detail/{id}": {
      "get": {
        "tags": ["Commodity Management"],
        "summary": "Get commodity details",
        "description": "Retrieves details of a specific commodity by ID",
        "operationId": "findOneCommodity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Commodity ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Commodity details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommodityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Commodity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commodity/create": {
      "post": {
        "tags": ["Commodity Management"],
        "summary": "Create a new commodity",
        "description": "Creates a new commodity with the provided data",
        "operationId": "createCommodity",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommodityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Commodity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the created commodity"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commodity/update": {
      "post": {
        "tags": ["Commodity Management"],
        "summary": "Update a commodity",
        "description": "Updates an existing commodity with the provided data",
        "operationId": "updateCommodity",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommodityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Commodity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Commodity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commodity/delete": {
      "post": {
        "tags": ["Commodity Management"],
        "summary": "Delete a commodity",
        "description": "Deletes a commodity by ID",
        "operationId": "deleteCommodity",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the commodity to delete"
                  }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Commodity deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Commodity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommodityImageDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "URL of the image"
          },
          "sortOrder": {
            "type": "integer",
            "description": "Order of the image in the gallery",
            "default": 1
          },
          "alt": {
            "type": "string",
            "description": "Alternative text for the image"
          }
        },
        "required": ["image"]
      },
      "CreateCommodityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the commodity"
          },
          "description": {
            "type": "string",
            "description": "Description of the commodity"
          },
          "price": {
            "type": "number",
            "description": "Price of the commodity",
            "minimum": 0
          },
          "stock": {
            "type": "integer",
            "description": "Stock quantity of the commodity",
            "minimum": 0
          },
          "mainImage": {
            "type": "string",
            "description": "Main display image URL"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "description": "Category ID of the commodity"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the commodity is active",
            "default": true
          },
          "images": {
            "type": "array",
            "description": "Additional images for the commodity",
            "items": {
              "$ref": "#/components/schemas/CommodityImageDto"
            }
          }
        },
        "required": ["name", "price", "stock", "categoryId"]
      },
      "UpdateCommodityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the commodity to update"
          },
          "name": {
            "type": "string",
            "description": "Name of the commodity"
          },
          "description": {
            "type": "string",
            "description": "Description of the commodity"
          },
          "price": {
            "type": "number",
            "description": "Price of the commodity",
            "minimum": 0
          },
          "stock": {
            "type": "integer",
            "description": "Stock quantity of the commodity",
            "minimum": 0
          },
          "mainImage": {
            "type": "string",
            "description": "Main display image URL"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "description": "Category ID of the commodity"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the commodity is active"
          },
          "images": {
            "type": "array",
            "description": "Additional images for the commodity",
            "items": {
              "$ref": "#/components/schemas/CommodityImageDto"
            }
          }
        },
        "required": ["id"]
      },
      "CommodityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the commodity"
          },
          "name": {
            "type": "string",
            "description": "Name of the commodity"
          },
          "description": {
            "type": "string",
            "description": "Description of the commodity"
          },
          "price": {
            "type": "number",
            "description": "Price of the commodity"
          },
          "stock": {
            "type": "integer",
            "description": "Stock quantity of the commodity"
          },
          "mainImage": {
            "type": "string",
            "description": "Main display image URL"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "description": "Category ID of the commodity"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the commodity is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "image": {
                  "type": "string"
                },
                "alt": {
                  "type": "string"
                },
                "sortOrder": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "PagedCommodityResponse": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommodityResponse"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of records"
          },
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "pageSize": {
            "type": "integer",
            "description": "Number of records per page"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "error": {
            "type": "string",
            "description": "Error type"
          }
        }
      }
    }
  }
}
